{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/loginAction.js","components/Layout/LayoutHead/HeadMenu.js","components/Modal/LoginModal.js","components/Layout/LayoutHead/HeadBar.js","components/Layout/LayoutHead/LayoutHeader.js","components/Content/Home.js","redux/actions/retriveData.js","components/Content/LadderChar.js","components/Content/Ladder.js","components/Content/LayoutContent.js","components/Layout/LayoutHead/HeadBackground.js","components/Layout/Layout.js","helper/reducerHelper.js","redux/reducer/login.js","redux/reducer/ladder.js","redux/reducer/index.js","redux/middlewares.js","redux/store/index.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","login","props","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","res","data","wrap","_context","prev","next","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","sent","json","username","localStorage","setItem","type","payload","t0","console","log","stop","_x","_x2","apply","this","arguments","logout","Menu","SubMenu","HeadMenu","react_default","createElement","id","react_router_dom","to","icon","showLoginModal","_LoginModal","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","ModalText","visible","confirmLoading","handleOk","setState","handleCancel","_this$state","modal","title","onOk","onCancel","React","Component","getDerivedStateFromProps","nextProps","prevState","isLogin","LoginModal","connect","profile","bindActionCreators","HeadBar","Fragment","className","es_button","ghost","onClick","LayoutHeader","location","Box","Card","Meta","style","height","Home","useEffect","Home_Box","retriveLadder","e","LadderChart","ladder","Ladder","LayoutContent","react_router","exact","path","component","LayoutContent_Box","HeadBackground","withRouter","pathname","MyLayout","_useState","useState","_useState2","slicedToArray","window","addEventListener","scrollY","h","clientY","header","clientHeight","classList","remove","add","document","querySelector","background","marginTop","LayoutHeader_LayoutHeader","makeUnionReducer","initState","reducers","length","undefined","action","objectSpread","loginReducer","_handlers","defineProperty","ladderReducer","rootReducer","combineReducers","middlewares","ReduxThunk","store","createStore","applyMiddleware","toConsumableArray","App","es","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e98845ad.chunk.js","sourcesContent":["export const actionTypes = {\r\n  LOGIN_SUCCEED: \"LOGIN_SUCCEED\",\r\n  LOGOUT: \"LOGOUT\",\r\n  RETRIVE_LADDER_SUCCEED: \"RETRIVE_LADDER_SUCCEED\"\r\n};\r\n","import { actionTypes } from \"./actionTypes\";\r\nlet url = \"http://localhost:4000/api/login\";\r\nexport let login = props => async (dispatch, getState) => {\r\n  try {\r\n    let res = await fetch(url, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, cors, *same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrer: \"no-referrer\", // no-referrer, *client\r\n      body: JSON.stringify({}) // body data type must match \"Content-Type\" header\r\n    });\r\n    let data = await res.json();\r\n    if (data.username) {\r\n      localStorage.setItem(\"username\", data.username);\r\n    }\r\n    dispatch({ type: actionTypes.LOGIN_SUCCEED, payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport let logout = () => ({ type: actionTypes.LOGOUT });\r\n","import { Menu, Icon, Divider } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { SubMenu } = Menu;\r\nexport function HeadMenu(props) {\r\n  return (\r\n    <div id=\"menu\">\r\n      <Link to=\"\">\r\n        <Icon type=\"home\" />\r\n      </Link>\r\n      <Link to=\"ladder\">\r\n        <Icon type=\"radar-chart\" />\r\n      </Link>\r\n      <Link to=\"history\">\r\n        <Icon type=\"line-chart\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { Modal, Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { login } from \"../../redux/actions/loginAction\";\r\nexport let showLoginModal = () => {};\r\nclass _LoginModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    showLoginModal = () => {\r\n      this.setState({\r\n        visible: true\r\n      });\r\n    };\r\n  }\r\n  state = {\r\n    ModalText: \"Content of the modal\",\r\n    visible: false,\r\n    confirmLoading: false\r\n  };\r\n\r\n  handleOk = async () => {\r\n    this.setState({\r\n      ModalText: \"Verifying user information\",\r\n      confirmLoading: true\r\n    });\r\n    this.props.login();\r\n  };\r\n\r\n  static getDerivedStateFromProps = (nextProps, prevState) => {\r\n    if (nextProps.isLogin) {\r\n      return {\r\n        visible: false,\r\n        confirmLoading: false\r\n      };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  render() {\r\n    const { visible, confirmLoading, ModalText } = this.state;\r\n    return (\r\n      <Modal\r\n        title=\"Title\"\r\n        visible={visible}\r\n        onOk={this.handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={this.handleCancel}\r\n      >\r\n        <p>{ModalText}</p>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: state.profile.isLogin\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ login }, dispatch);\r\nexport const LoginModal = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_LoginModal);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport { HeadMenu } from \"./HeadMenu\";\r\nimport \"./LayoutHeader.css\";\r\nimport { showLoginModal } from \"../../Modal/LoginModal\";\r\n\r\nexport function HeadBar(props) {\r\n  return (\r\n    <header id=\"head-bar\">\r\n      <div id=\"logo\">logo</div>\r\n      <div id=\"head-middle\">\r\n        <HeadMenu />\r\n      </div>\r\n      <div id=\"head-right\">\r\n        <div>search bar</div>\r\n        {props.isLogin ? (\r\n          <>\r\n            <div className=\"login\">\r\n              <Button ghost onClick={props.logout}>\r\n                log out\r\n              </Button>\r\n            </div>\r\n            {props.username}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <Button ghost onClick={showLoginModal}>\r\n                log in\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <Button ghost>register</Button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./LayoutHeader.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { logout } from \"../../../redux/actions/loginAction\";\r\nimport { HeadBar } from \"./HeadBar\";\r\n\r\nfunction _LayoutHeader({ username, isLogin, location }) {\r\n  return <HeadBar username={username} isLogin={isLogin} />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: state.profile.isLogin,\r\n  username: state.profile.username\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ logout }, dispatch);\r\n\r\nexport const LayoutHeader = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_LayoutHeader);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Card } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\nconst Box = () => <div style={{ height: \"1000px\" }}>sdf</div>;\r\nexport function Home(props) {\r\n  useEffect(() => {\r\n    // let c = document.querySelector(\"#card1\");\r\n    // c.onscroll = e => console.log(c.scrollHeight);\r\n    // console.log(c);\r\n  });\r\n  return (\r\n    <main>\r\n      <Box />\r\n      <Box />\r\n      <Box />\r\n      <Box />\r\n      {/* <Card\r\n        id=\"card1\"\r\n        hoverable\r\n        style={{ width: 240 }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src=\"http://pluspng.com/img-png/pingpong-hd-png-ping-pong-download-png-png-image-2401.png\"\r\n          />\r\n        }\r\n      >\r\n        <Meta title=\"Ping pong\" description=\"Find one\" />\r\n      </Card>\r\n      <Card\r\n        id=\"card1\"\r\n        hoverable\r\n        style={{ width: 240 }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src=\"http://pluspng.com/img-png/pingpong-hd-png-ping-pong-download-png-png-image-2401.png\"\r\n          />\r\n        }\r\n      >\r\n        <Meta title=\"Ping pong\" description=\"Find one\" />\r\n      </Card>\r\n      <Card\r\n        id=\"card1\"\r\n        hoverable\r\n        style={{ width: 240 }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src=\"http://pluspng.com/img-png/pingpong-hd-png-ping-pong-download-png-png-image-2401.png\"\r\n          />\r\n        }\r\n      >\r\n        <Meta title=\"Ping pong\" description=\"Find one\" />\r\n      </Card> */}\r\n    </main>\r\n  );\r\n}\r\n","import { actionTypes } from \"./actionTypes\";\r\n\r\nlet url = \"http://localhost:4000/api/ladder\";\r\nexport let retriveLadder = () => async dispatch => {\r\n  try {\r\n    // let res = await fetch(url);\r\n    // let data = await res.json();\r\n    // if (data.status) {\r\n    //   console.log(data);\r\n    // }\r\n    let data = { username: \"sdf\" };\r\n    dispatch({ type: actionTypes.RETRIVE_LADDER_SUCCEED, payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nexport function _Ladder({ retriveLadder, ladder }) {\r\n  useEffect(() => {\r\n    // let c = document.querySelector(\"#card1\");\r\n    // c.onscroll = e => console.log(c.scrollHeight);\r\n    // retriveLadder();\r\n    console.log(ladder);\r\n  });\r\n  return <div>ladder</div>;\r\n}\r\nconst mapStateToProps = state => ({\r\n  ladder: state\r\n});\r\n\r\nexport let LadderChart = connect(mapStateToProps)(_Ladder);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Card } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { retriveLadder } from \"../../redux/actions/retriveData\";\r\nimport { LadderChart } from \"./LadderChar\";\r\nconst { Meta } = Card;\r\nconst Box = () => <div style={{ height: \"1000px\" }}>ladder</div>;\r\nexport function _Ladder({ retriveLadder, ladder }) {\r\n  useEffect(() => {\r\n    // let c = document.querySelector(\"#card1\");\r\n    // c.onscroll = e => console.log(c.scrollHeight);\r\n    retriveLadder();\r\n    console.log(ladder, retriveLadder);\r\n  });\r\n  return <LadderChart />;\r\n}\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ retriveLadder }, dispatch);\r\n\r\nexport let Ladder = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(_Ladder);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Card } from \"antd\";\r\nimport { Home } from \"./Home\";\r\nimport { Ladder } from \"./Ladder\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\nconst Box = () => <div style={{ height: \"1000px\" }}>sdf</div>;\r\nexport function LayoutContent(props) {\r\n  useEffect(() => {\r\n    // let c = document.querySelector(\"#card1\");\r\n    // c.onscroll = e => console.log(c.scrollHeight);\r\n    // console.log(c);\r\n  });\r\n  return (\r\n    <main>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/ladder\" component={Ladder} />\r\n      <Box />\r\n      <Box />\r\n      <Box />\r\n      <Box />\r\n      {/* <Card\r\n        id=\"card1\"\r\n        hoverable\r\n        style={{ width: 240 }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src=\"http://pluspng.com/img-png/pingpong-hd-png-ping-pong-download-png-png-image-2401.png\"\r\n          />\r\n        }\r\n      >\r\n        <Meta title=\"Ping pong\" description=\"Find one\" />\r\n      </Card>\r\n      <Card\r\n        id=\"card1\"\r\n        hoverable\r\n        style={{ width: 240 }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src=\"http://pluspng.com/img-png/pingpong-hd-png-ping-pong-download-png-png-image-2401.png\"\r\n          />\r\n        }\r\n      >\r\n        <Meta title=\"Ping pong\" description=\"Find one\" />\r\n      </Card>\r\n      <Card\r\n        id=\"card1\"\r\n        hoverable\r\n        style={{ width: 240 }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src=\"http://pluspng.com/img-png/pingpong-hd-png-ping-pong-download-png-png-image-2401.png\"\r\n          />\r\n        }\r\n      >\r\n        <Meta title=\"Ping pong\" description=\"Find one\" />\r\n      </Card> */}\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nexport function _HeadBackground(props) {\r\n  console.log(props.location, props.location.pathname === \"/\");\r\n  return props.location.pathname === \"/\" && <div id=\"head-background\"> </div>;\r\n}\r\n\r\nexport let HeadBackground = withRouter(_HeadBackground);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LayoutHeader } from \"./LayoutHead/LayoutHeader\";\r\nimport { LayoutContent } from \"../Content/LayoutContent\";\r\nimport { LoginModal } from \"../Modal/LoginModal\";\r\nimport \"./Layout.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { HeadBackground } from \"./LayoutHead/HeadBackground\";\r\n\r\nexport function _MyLayout({ location }) {\r\n  const [headVisibility, setHeadVisibility] = useState(true);\r\n  useEffect(() => {\r\n    function handleScroll(e) {\r\n      if (window.scrollY > h) {\r\n        header.classList.add(\"hide-headbar\");\r\n      } else {\r\n        header.classList.remove(\"hide-headbar\");\r\n      }\r\n    }\r\n    function handlemousemove(e) {\r\n      if (window.scrollY > h) {\r\n        if (e.clientY < header.clientHeight) {\r\n          header.classList.remove(\"hide-headbar\");\r\n          header.classList.add(\"headbar-background\");\r\n        } else {\r\n          header.classList.add(\"hide-headbar\");\r\n          header.classList.remove(\"headbar-background\");\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener(\"mousemove\", handlemousemove);\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    const header = document.querySelector(\"header\");\r\n    const background = document.querySelector(\"#head-background\");\r\n    let h = background ? background.clientHeight : header.clientHeight;\r\n    document.querySelector(\"main\").style.marginTop = h + \"px\";\r\n    console.log(document.querySelector(\"main\"));\r\n    // console.log(dom);\r\n  });\r\n  return (\r\n    <div id=\"container\">\r\n      {location.pathname === \"/\" && <HeadBackground />}\r\n\r\n      <LoginModal />\r\n      <LayoutHeader />\r\n      <LayoutContent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const MyLayout = withRouter(_MyLayout);\r\n","export const makeUnionReducer = (initState, reducers) => (\r\n  state = initState,\r\n  action\r\n) => {\r\n  if (reducers[action.type])\r\n    return { ...state, ...reducers[action.type](action.payload) };\r\n  return state;\r\n};\r\n","import { makeUnionReducer } from \"../../helper/reducerHelper\";\r\nimport { actionTypes } from \"../actions/actionTypes\";\r\n\r\nlet handlers = {\r\n  [actionTypes.LOGIN_SUCCEED]: ({ username }) => ({ username, isLogin: true }),\r\n  [actionTypes.LOGOUT]: () => ({ username: \"\", isLogin: false })\r\n};\r\n\r\nlet initState = {\r\n  username: \"\",\r\n  isLogin: false\r\n};\r\n\r\nexport let loginReducer = makeUnionReducer(initState, handlers);\r\n","import { makeUnionReducer } from \"../../helper/reducerHelper\";\r\nimport { actionTypes } from \"../actions/actionTypes\";\r\n\r\nlet handlers = {\r\n  [actionTypes.RETRIVE_LADDER_SUCCEED]: ({ username }) => ({ username })\r\n};\r\n\r\nlet initState = {\r\n  username: \"defalut\"\r\n};\r\n\r\nexport let ladderReducer = makeUnionReducer(initState, handlers);\r\n","import { loginReducer } from \"./login\";\r\nimport { combineReducers } from \"redux\";\r\nimport { ladderReducer } from \"./ladder\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  profile: loginReducer,\r\n  ladder: ladderReducer\r\n});\r\n","import ReduxThunk from \"redux-thunk\";\r\n\r\nexport let middlewares = [ReduxThunk];\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducer\";\r\nimport { middlewares } from \"../middlewares\";\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nexport default store;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { MyLayout } from \"./components/Layout/Layout\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./redux/store\";\nfunction App(props) {\n  return (\n    <Provider store={store}>\n      <Router>\n        <MyLayout />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}